This is just a file to keep notes on how to represent different parts of the game.

An important thing to figure out is: how are we going to represent game information? (ie. player count, roles in play, script in use, etc...)
    1. We could represent all game information in a single config file that the program could read. (Use a separate program to generate this file?)
        - If we're using the AI as a storyteller, there would need to be a function for taking a script (representing through text or .json possibly),
          and player count, and whatever else and create the config file (or maybe class) on its own.
    2. csv files or txt files could be read and analyzed by the program to piece the information together for itself?
        - They would have to be very specifically organized files for a hard-written program to figure it out.
    3. The game may be able to be represented by an object which would be able to be generated by the AI easily and easily accessible by the AI. 
        - This is probably the way to do it (and how I will start to try to solve it).

Another important thing to figure out is how to train the model.
    What data can we give it to train it to make correct choices in rulings and create valid responses to players' questions?
    ***It may be best to hard code obviously known game mechanics and just use a generative model to fabricate responses to players***
    

Sources:

https://realpython.com/playing-and-recording-sound-python/
https://github.com/openai/openai-python/blob/main/README.md
https://wiki.bloodontheclocktower.com/